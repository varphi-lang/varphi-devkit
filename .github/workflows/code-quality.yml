name: Code Quality

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Add coverage dependencies
      run: |
        poetry add --group dev pytest-cov

    - name: Run tests with coverage
      run: |
        poetry run pytest tests/ --cov=src/varphi_devkit --cov-report=xml --cov-report=html --cov-report=term-missing -v

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive coverage HTML report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

    - name: Run security check with bandit
      run: |
        poetry add --group dev bandit[toml]
        poetry run bandit -r src/varphi_devkit/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report
        path: bandit-report.json

    - name: Check import sorting with isort
      run: |
        poetry add --group dev isort
        poetry run isort --check-only --diff src/ tests/
      continue-on-error: true

    - name: Check code formatting with black
      run: |
        poetry add --group dev black
        poetry run black --check --diff src/ tests/
      continue-on-error: true

    - name: Type checking with mypy
      run: |
        poetry add --group dev mypy
        poetry run mypy src/varphi_devkit/ --ignore-missing-imports
      continue-on-error: true